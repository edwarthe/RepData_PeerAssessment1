x<-c("yes","yes","no","yes","no")
x
y<-factor(c("yes","yes","no","yes","no"))
y
table(x)
table(y)
x<-list(a=1,b=2,c=3)
x
a
x$a
add2<-function(x,y){
x+y
}
add2(5,3)
above<-function(x,n){
use<-x>n
x[use]
}
x<-1:20
above(x,12)
above<-function(x,n=10){
use<-x>n
x[use]
}
above(x)
source('~/.active-rstudio-document')
columnmean<-function(y){
nc<-ncol(y)
means <-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.1.0/library")
set.seed(1)
rpois(5,2)
source('~/.active-rstudio-document')
y
plot(x,y)
summary(y)
source('~/.active-rstudio-document')
lm(y ~ x)
lm(y ~ x + e)
source('~/.active-rstudio-document')
summaryRprof()
by.total()
by.total
qbeta(0.75,1,1)
1+2+3+4
1+2+3+4/4
(1+2+3+4)/4
0.5*0.5
0.2*2
0.1*1+0.2*2+0.3*3+0.4*4
xyplot
xyplot()
install.packages("lattice")
library(lattice)
?xyplot
library(datasets)
lg<-xyplot(Ozone ~ Wind, data = airquality)
class(lg)
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
source('Z:/Courses/Reproducible Research/w2/peer assessment 1/RepData_PeerAssessment1/peerassessment1.R')
title(main="Activity")
hist(tapply(activity$steps,activity$date,sum,na.rm=TRUE))
hist(tapply(activity$steps,activity$date,sum,na.rm=TRUE))
hist(tapply(activity$steps,activity$date,sum,na.rm=TRUE),main="Activity per day")
hist(tapply(activity$steps,activity$date,sum,na.rm=TRUE),main="Activity per day",xlab)
hist(tapply(activity$steps,activity$date,sum,na.rm=TRUE),main="Activity per day",xlab="")
hist(tapply(activity$steps,activity$date,sum,na.rm=TRUE),main="Activity per day",xlab="")
hist(tapply(activity$steps,activity$date,sum,na.rm=TRUE),main="Total steps / day",xlab="")
hist(tapply(activity$steps,activity$date,sum,na.rm=TRUE),main="Total steps per day",xlab="")
hist(tapply(activity$steps,activity$date,sum,na.rm=TRUE),main="Total steps per day",xlab="Steps")
source('Z:/Courses/Reproducible Research/w2/peer assessment 1/RepData_PeerAssessment1/peerassessment1.R')
source('Z:/Courses/Reproducible Research/w2/peer assessment 1/RepData_PeerAssessment1/peerassessment1.R')
hist(tapply(activity$steps,activity$interval,mean,na.rm=TRUE),main="Average steps per 5-minute interval",xlab="Steps")
source('Z:/Courses/Reproducible Research/w2/peer assessment 1/RepData_PeerAssessment1/peerassessment1.R')
source('Z:/Courses/Reproducible Research/w2/peer assessment 1/RepData_PeerAssessment1/peerassessment1.R')
source('Z:/Courses/Reproducible Research/w2/peer assessment 1/RepData_PeerAssessment1/peerassessment1.R')
hist(tapply(activity$steps,activity$interval,mean,na.rm=TRUE),main="Average steps per 5-minute interval",xlab="Steps")
plot(activity$interval,tapply(activity$steps,activity$interval,mean,na.rm=TRUE),main="Average steps per 5-minute interval",xlab="Steps",ylab="Average steps",type="l")
plot(activity[!is.na(activity[,3]),],tapply(activity$steps,activity$interval,mean,na.rm=TRUE),main="Average steps per 5-minute interval",xlab="Steps",ylab="Average steps",type="l")
plot(activity$interval,tapply(activity$steps,activity$interval,mean,na.rm=TRUE),main="Average steps per 5-minute interval",xlab="Steps",ylab="Average steps",type="l")
levels(activity$interval)
str(activity)
plot(factor(activity$interval),tapply(activity$steps,factor(activity$interval),mean,na.rm=TRUE),main="Average steps per 5-minute interval",xlab="Steps",ylab="Average steps",type="l")
with(activity,plot(interval,steps,tipe="l"))
with(activity,plot(interval,steps,type="l"))
warnings()
warnings()
with(activity,plot(factor(interval),tapply(activity$steps,activity$interval,mean),type="l"))
with(activity,plot(factor(interval),tapply(activity$steps,activity$interval,mean,na.rm=TRUE),type="l"))
length(factor(activity$interval))
length(levels(activity$interval))
with(activity,plot(as.factor(interval),tapply(activity$steps,as.factor(activity$interval),mean,na.rm=TRUE),type="l"))
with(activity,plot(as.factor(interval),tapply(activity$steps,as.factor(activity$interval),mean,na.rm=FALSE),type="l"))
length(levels(activity$interval))
with(activity,plot(interval,steps,type="l"))
length(activity$interval)
length(as.factor(activity$interval))
srt(activity)
str(activity)
length(as.factor(activity$interval))
length(factor(activity$interval))
length(as.factor(as.character(activity$interval))
d
length(as.factor(as.character(activity$interval)))
length(factor(as.character(activity$interval)))
length(cut(activity$interval))
length(cut(activity$interval,breaks=2355))
length(cut(activity$interval,breaks=0:2355))
cut(rep(1,5), 4)
length(cut(activity$interval,breaks=1))
length(cut(activity$interval,breaks=0))
length(cut(activity$interval,breaks=2))
tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
unique(activity$interval)
with(activity,plot(unique(interval),tapply(activity$steps,as.factor(activity$interval),mean,na.rm=TRUE),type="l"))
max(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
wich.max(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
which.max(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
with(activity,plot(unique(interval),tapply(activity$steps,as.factor(activity$interval),mean,na.rm=TRUE),type="l"))
with(activity,plot(unique(interval),tapply(activity$steps,activity$interval,mean,na.rm=TRUE),type="l"))
par(2,1)
with(activity,plot(unique(interval),tapply(activity$steps,as.factor(activity$interval),mean,na.rm=TRUE),type="l"))
par(1,2)
with(activity,plot(unique(interval),tapply(activity$steps,as.factor(activity$interval),mean,na.rm=TRUE),type="l"))
with(activity,plot(unique(interval),tapply(activity$steps,activity$interval,mean,na.rm=TRUE),type="l"))
parc(mfrow= (1,2))
with(activity,plot(unique(interval),tapply(activity$steps,as.factor(activity$interval),mean,na.rm=TRUE),type="l"))
with(activity,plot(unique(interval),tapply(activity$steps,activity$interval,mean,na.rm=TRUE),type="l"))
par(mfrow= c(1,2))
with(activity,plot(unique(interval),tapply(activity$steps,as.factor(activity$interval),mean,na.rm=TRUE),type="l"))
with(activity,plot(unique(interval),tapply(activity$steps,activity$interval,mean,na.rm=TRUE),type="l"))
with(activity,plot(unique(interval),tapply(activity$steps,activity$interval,mean,na.rm=TRUE),type="l"))
with(activity,plot(unique(interval),tapply(activity$steps,activity$interval,mean,na.rm=TRUE),type="l",xlab="Steps per interval",ylab="Average"))
with(activity,plot(unique(interval),tapply(activity$steps,activity$interval,mean,na.rm=TRUE),type="l",xlab="5-minute intervals",ylab="Average steps"))
wich.max(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
which.max(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
d<-which.max(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
d
class(d)
d[1]
d[[1]]
d(1)
tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
max(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
class(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
max(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
which.max(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))
tapply(activity$steps,activity$interval,mean,na.rm=TRUE)[which.max(tapply(activity$steps,activity$interval,mean,na.rm=TRUE))]
